# Generated from Calculadora2.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,67,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,1,1,1,1,2,1,2,
        1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,4,7,39,8,7,11,7,12,7,40,1,7,
        1,7,4,7,45,8,7,11,7,12,7,46,3,7,49,8,7,1,8,4,8,52,8,8,11,8,12,8,
        53,1,9,3,9,57,8,9,1,9,1,9,1,10,4,10,62,8,10,11,10,12,10,63,1,10,
        1,10,0,0,11,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
        1,0,3,1,0,48,57,2,0,65,90,97,122,2,0,9,9,32,32,72,0,1,1,0,0,0,0,
        3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,
        1,0,0,0,3,25,1,0,0,0,5,27,1,0,0,0,7,29,1,0,0,0,9,31,1,0,0,0,11,33,
        1,0,0,0,13,35,1,0,0,0,15,38,1,0,0,0,17,51,1,0,0,0,19,56,1,0,0,0,
        21,61,1,0,0,0,23,24,5,94,0,0,24,2,1,0,0,0,25,26,5,42,0,0,26,4,1,
        0,0,0,27,28,5,47,0,0,28,6,1,0,0,0,29,30,5,43,0,0,30,8,1,0,0,0,31,
        32,5,45,0,0,32,10,1,0,0,0,33,34,5,40,0,0,34,12,1,0,0,0,35,36,5,41,
        0,0,36,14,1,0,0,0,37,39,7,0,0,0,38,37,1,0,0,0,39,40,1,0,0,0,40,38,
        1,0,0,0,40,41,1,0,0,0,41,48,1,0,0,0,42,44,5,46,0,0,43,45,7,0,0,0,
        44,43,1,0,0,0,45,46,1,0,0,0,46,44,1,0,0,0,46,47,1,0,0,0,47,49,1,
        0,0,0,48,42,1,0,0,0,48,49,1,0,0,0,49,16,1,0,0,0,50,52,7,1,0,0,51,
        50,1,0,0,0,52,53,1,0,0,0,53,51,1,0,0,0,53,54,1,0,0,0,54,18,1,0,0,
        0,55,57,5,13,0,0,56,55,1,0,0,0,56,57,1,0,0,0,57,58,1,0,0,0,58,59,
        5,10,0,0,59,20,1,0,0,0,60,62,7,2,0,0,61,60,1,0,0,0,62,63,1,0,0,0,
        63,61,1,0,0,0,63,64,1,0,0,0,64,65,1,0,0,0,65,66,6,10,0,0,66,22,1,
        0,0,0,7,0,40,46,48,53,56,63,1,6,0,0
    ]

class Calculadora2Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    NUMBER = 8
    ID = 9
    NEWLINE = 10
    WS = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'^'", "'*'", "'/'", "'+'", "'-'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "ID", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "NUMBER", "ID", "NEWLINE", "WS" ]

    grammarFileName = "Calculadora2.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


